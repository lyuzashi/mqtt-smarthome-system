#!/bin/bash

ip link add link eth0 name eth0.6 type vlan id 6

# Remove this file if you want to re-run the setup
#
if [ -f /boot/pi-install.done ] ; then
  exit 0
fi

if [ -f /boot/cmdline.original.txt ] ; then
  mv -f /boot/cmdline.original.txt /boot/cmdline.txt
fi

# Set hostname
echo "HAL9000" > /etc/hostname

# Enable RTC
sudo raspi-config nonint do_i2c 0
echo "dtoverlay=i2c-rtc,pcf8523" | sudo tee -a /boot/config.txt

# Find best apt mirror
export DEBIAN_FRONTEND=noninteractive
sudo apt-get install netselect-apt -y
sudo netselect-apt

# Prepare install yarn
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
apt-get remove cmdtest yarn -y

# Prepare install influx
curl -sL https://repos.influxdata.com/influxdb.key | sudo apt-key add - 
source /etc/os-release
test $VERSION_ID = "7" && echo "deb https://repos.influxdata.com/debian wheezy stable" | sudo tee /etc/apt/sources.list.d/influxdb.list
test $VERSION_ID = "8" && echo "deb https://repos.influxdata.com/debian jessie stable" | sudo tee /etc/apt/sources.list.d/influxdb.list
test $VERSION_ID = "9" && echo "deb https://repos.influxdata.com/debian stretch stable" | sudo tee /etc/apt/sources.list.d/influxdb.list

# Update sources and packages
apt update
apt full-upgrade -y

# Install binary deps and support software
apt install libasound2-dev alsa-base alsa-utils bluetooth libbluetooth-dev libudev-dev git libcap2-bin redis-server influxdb libavahi-compat-libdnssd-dev vlan -y
apt install --no-install-recommends yarn -y

# Start influx - might happen automatically
sudo systemctl start influxdb chronograf telegraf kapacitor

# Setup user
USERNAME=hal
useradd -m $USERNAME
usermod -s /bin/bash hal
NEWHOME=$(eval echo ~$USERNAME)

# Turn off login warnings
rm /etc/profile.d/sshpwd.sh 
rm /etc/profile.d/wifi-country.sh 

# Download current codebase
su - hal -c "git clone https://github.com/lyuzashi/mqtt-smarthome-system.git"

# Install node (finding latest version for major in .nvmrc, using correct arch version)
SOURCE="https://nodejs.org/dist/latest"
MAJOR="$(sed -En 's/[^0-9]*([0-9]+).*/\1/p' $NEWHOME/mqtt-smarthome-system/.nvmrc)"
ARM="$(sed -n 's/model name.*(\(\S*\)).*$/\1/p' /proc/cpuinfo | head -1)"
NODE="$(curl -sL $SOURCE-v$MAJOR.x | grep arm$ARM.tar.xz | cut -d'"' -f2)"
wget -O node.tar.xz $SOURCE/$NODE
tar -xf node.tar.xz
chmod -R 755 node*/bin/*
cp -r node*/{bin,lib,share} /usr/local
rm -r node*

# Provide bind to lower ports and BTL permissions to node binary
setcap cap_net_bind_service,cap_net_raw+eip $(eval readlink -f `which node`)
usermod -a -G audio hal # Provide audio permissions to user
usermod -a -G gpio hal # Provide gpio permissions to user

# Setup global modules directory
mkdir "${NEWHOME}/.npm-packages"
echo 'NPM_PACKAGES="${HOME}/.npm-packages"
NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"
PATH="$NPM_PACKAGES/bin:$PATH"
unset MANPATH
MANPATH="$NPM_PACKAGES/share/man:$(manpath)"
NODE_ENV=production
' | tee -a $NEWHOME/.profile > /dev/null
echo 'prefix=${HOME}/.npm-packages' | tee -a $NEWHOME/.npmrc > /dev/null
chown hal:hal $NEWHOME/.npmrc
chown hal:hal $NEWHOME/.profile
chown hal:hal $NEWHOME/.npm-packages

# Install dependencies
sudo su - hal -c "yarn install --cwd $NEWHOME/mqtt-smarthome-system"

# Install service manager
su - hal -c "npm install -g forever forever-service"

# Setup service
FOREVER_SERVICE=$NEWHOME/.npm-packages/lib/node_modules/forever-service/bin/forever-service
FOREVER=$NEWHOME/.npm-packages/lib/node_modules/forever/bin
cd $NEWHOME/mqtt-smarthome-system # Required to set Forever Service to start in correct directory
$FOREVER_SERVICE install mqtt-smarthome-system --foreverPath $FOREVER --runAsUser hal --envVars "NODE_ENV=production DEBUG=smarthome*" --start --script $NEWHOME/mqtt-smarthome-system/main.mjs --foreverOptions  " -c 'node --no-warnings --experimental-modules --experimental-repl-await' --workingDir $NEWHOME/mqtt-smarthome-system" 

# Setup VLAN
echo '8021q' | tee -a /etc/modules > /dev/null
modprobe 8021q
ip link add link eth0 name eth0.6 type vlan id 6

# Flag script as done
touch /boot/pi-install.done

# Modules for node won't be available until reboot. Can they be installed though?
sudo rpi-update
reboot

exit 0
